generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  username    String   @unique
  firstName   String
  lastName    String
  email       String   @unique
  password    String   // Password will be hashed
  description String?
  team        Team?    @relation(fields: [teamId], references: [id])
  teamId      String?
  posts       RegularPost[]
  fastSearch  FastSearching[]
  notifications Notifications[]
}

model Team {
  id          String      @id @default(uuid())
  teamname    String   @unique
  ceoFirstName String
  ceoLastName  String
  email       String   @unique
  password    String
  description String?
  rosterList  Json
  teamColor   String
  offerPosts  OfferPost[]
  fastSearch  FastSearching[]

  User User[]
}

model RegularPost {
  id          Int      @id @default(autoincrement())
  imageList   Json
  poster      User     @relation(fields: [posterId], references: [id])
  posterId    String
  description String
  likes       Int      @default(0)
  likesList   Json
  reposts     Int      @default(0)
  repostsList Json
  comments    Json
}

model OfferPost {
  id              Int      @id @default(autoincrement())
  imageList       Json
  team           Team     @relation(fields: [teamId], references: [id])
  teamId         String
  description     String
  applyingUserList Json
}

model FastSearching {
  id           Int    @id @default(autoincrement())
  swiper      User?  @relation(fields: [swiperId], references: [id])
  swiperId    String?
  acceptedList Json
  refusedList  Json

  Team Team[]
}

model Games {
  id        String      @id @default(uuid())
  gameName  String @unique
  gameLogo String @unique
}

model Notifications {
  id               Int    @id @default(autoincrement())
  receiver        User   @relation(fields: [receiverId], references: [id])
  receiverId      String
  notificationType String
}
